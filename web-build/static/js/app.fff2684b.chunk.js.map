{"version":3,"sources":["styles.js","Components/header.js","Components/weekly.js","Components/daily.js","Components/ultimate.js","App.js"],"names":["styles","StyleSheet","create","body","flex","backgroundColor","flexDirection","height","container","padding","footer","bigBlue","color","fontWeight","fontSize","mainButton","list","margin","input","borderWidth","borderColor","borderRadius","header","justifyContent","Header","setCurrentScreen","stuff","data","View","style","Button","id","onPress","title","accessibilityLabel","Weekly","useState","itemList","setList","React","number","onChangeNumber","setData","useEffect","a","async","fetch","response","json","console","log","getList","map","item","Text","Platform","OS","showToast","ToastAndroid","show","SHORT","FlatList","renderItem","TextInput","value","onChangeText","e","Daily","Ultimate","App","currentScreen","content"],"mappings":"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","file":"static/js/app.fff2684b.chunk.js","sourcesContent":["import { StyleSheet } from 'react-native';\n\nexport const styles = StyleSheet.create({\n  body: {\n    flex: 1,\n    backgroundColor: \"#efcae0\",\n    flexDirection: \"column\",\n    height:\"90%\",\n  },\n  container: {\n    backgroundColor: \"#b7d9ac\",\n    flex: 1,\n    padding: 20,\n  },\n  footer: {\n    backgroundColor: \"#8479bf\",\n    height: 40,\n  },\n  bigBlue: {\n    color: 'blue',\n    fontWeight: 'bold',\n    fontSize: 30,\n  },\n  mainButton: {\n    backgroundColor: 'red',\n    flex: 1,\n  },\n  list: {\n    margin: 10,\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: \"#777\",\n    borderRadius: 3,\n    padding: 3,\n    margin: 10,\n    backgroundColor: \"#fefefe\",\n  },\n  header: {\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\"\n  }\n})\n","import React, { useState, useEffect } from 'react';\nimport { View, Text, Button } from 'react-native';\nimport { styles } from '../styles';\n\nexport function Header({setCurrentScreen}) {\n\n    const stuff = (data) => {\n        setCurrentScreen(data)\n    }\n\n    return <View style={styles.header}>\n        <Button\n            id='daily'\n            onPress={() => stuff('daily')}\n            title=\"Daily todo\"\n            accessibilityLabel=\"Daily todo\"\n        />\n        <Button\n            onPress={() => stuff('weekly')}\n            title=\"Weekly todo\"\n            accessibilityLabel=\"Daily todo\"\n        />\n        <Button\n            onPress={() => stuff('ultimate')}\n            title=\"Ultimate goal\"\n            accessibilityLabel=\"Daily todo\"\n        />\n    </View>\n}\n","import {Button, FlatList, Text, TextInput, ToastAndroid, View} from \"react-native\";\nimport {styles} from \"../styles\";\nimport React, {useEffect, useState} from \"react\";\n\nexport const Weekly = () => {\n    const [itemList, setList] = useState(['FIrst']);\n    const [number, onChangeNumber] = React.useState('Init');\n    const [data, setData] = useState([]);\n\n    const getList = async()=>{\n        try{\n            const response = await fetch('https://the-very-mine-todo-app.herokuapp.com/list');\n\n            const json = await response.json();\n            setData(json);\n            setList(json);\n        }catch(e){\n            console.log('ERROR',e)\n        }\n    }\n\n    useEffect(() => {\n        getList();\n    }, []);\n\n\n    const updateText = (e) => {\n        onChangeNumber(e)\n    }\n\n    const appendToList = () => {\n        setList([number,...itemList])\n        showToast();\n    }\n\n\n    const listItems = itemList.map((item) => {\n        return <Text> - {item}</Text>\n    })\n\n    console.log('data', Platform.OS)\n\n    const showToast = () => {\n        ToastAndroid.show(\"Item saved\", ToastAndroid.SHORT);\n    };\n\n    return     <View style={styles.body}>\n        <View style={styles.container}>\n            <Text> Weekly TODO:</Text>\n            <FlatList\n                style={styles.list}\n                data={itemList}\n                renderItem={({item}) => <Text style={styles.item}>- {item}</Text>}\n            />\n\n            <Text> Add new item </Text>\n            <TextInput style={styles.input} value={number} onChangeText={updateText} />\n        </View>\n        <View style={styles.footer}>\n            <Button\n                style={styles.mainButton}\n                onPress={appendToList}\n                title=\"Submit\"\n                accessibilityLabel=\"Learn more about this purple button\"\n            />\n        </View>\n    </View>\n}\n","import {Button, FlatList, Text, TextInput, ToastAndroid, View} from \"react-native\";\nimport {styles} from \"../styles\";\nimport React, {useEffect, useState} from \"react\";\n\nexport const Daily = () => {\n    return     <View style={styles.body}>\n        <View style={styles.container}>\n            <Text> Daily TODO:</Text>\n\n        </View>\n\n    </View>\n}\n","import {Button, FlatList, Text, TextInput, ToastAndroid, View} from \"react-native\";\nimport {styles} from \"../styles\";\nimport React, {useEffect, useState} from \"react\";\n\nexport const Ultimate = () => {\n    return     <View style={styles.body}>\n        <View style={styles.container}>\n            <Text> Ultimate TODO:</Text>\n\n        </View>\n\n    </View>\n}\n","import React, { useState, useEffect } from 'react';\nimport { Text, View, Button, FlatList, SafeAreaView, StyleSheet, TextInput, ToastAndroid } from 'react-native';\nimport { styles } from './styles';\nimport {Header} from \"./Components/header\";\nimport {Weekly} from \"./Components/weekly\";\nimport {Daily} from \"./Components/daily\";\nimport {Ultimate} from \"./Components/ultimate\";\n\nfunction App() {\n  const [currentScreen, setCurrentScreen] = useState('weekly');\n  let content = <Weekly/>\n\n  switch (currentScreen) {\n    case 'weekly':\n      content = <Weekly />\n      break;\n    case 'daily':\n      content = <Daily />\n      break;\n    case 'ultimate':\n      content = <Ultimate />\n      break;\n  }\n\n  console.log('currenty', currentScreen)\n  return (\n      <View style={styles.body}>\n        <Header setCurrentScreen={setCurrentScreen} />\n\n        {content}\n      </View>\n  );\n}\n\n\nexport default App;\n"],"sourceRoot":""}